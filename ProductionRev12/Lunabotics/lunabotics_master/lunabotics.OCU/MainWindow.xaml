<Window x:Class="lunabotics.OCU.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:local="clr-namespace:lunabotics.OCU"
        xmlns:views="clr-namespace:lunabotics.OCU.Views"
        xmlns:charting="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit"
        xmlns:toolkit="clr-namespace:System.Windows.Controls.DataVisualization;assembly=System.Windows.Controls.DataVisualization.Toolkit"
        xmlns:converters="clr-namespace:lunabotics.OCU.Converters"
        xmlns:components="clr-namespace:lunabotics.OCU.Components"
        xmlns:visual="clr-namespace:lunabotics.OCU.Visual_Controls"
        Title="Mountaineer Mining Vehicle 2014" Height="700" Width="1000">
    <Window.Resources>
        <converters:SecondsToTimeStringConverter x:Key="ticksConverter"/>
        <converters:NegateConverter x:Key="negateConverter"/>
    </Window.Resources>
    <Grid Background="{DynamicResource MainWindowBackgroundBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Row="0" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" HorizontalAlignment="Left" Command="{Binding ToggleComms}">
                <Viewbox> 
                    <Path x:Name="path" StrokeThickness="4" Height="30" Width="35">
                        <Path.Data>
                            <GeometryGroup>
                                <EllipseGeometry Center="5,15" RadiusX="1" RadiusY="1"/>
                                <PathGeometry>
                                    <PathGeometry.Figures>
                                        <PathFigureCollection>
                                            <PathFigure StartPoint="10.54,12.7">
                                                <PathFigure.Segments>
                                                    <PathSegmentCollection>
                                                        <ArcSegment Size="6,6" IsLargeArc="False" SweepDirection="Clockwise" Point="10.54,17.3" IsStroked="True" />
                                                    </PathSegmentCollection>
                                                </PathFigure.Segments>
                                            </PathFigure>
                                            <PathFigure StartPoint="16.1,10.4">
                                                <PathFigure.Segments>
                                                    <PathSegmentCollection>
                                                        <ArcSegment Size="12,12" IsLargeArc="False" SweepDirection="Clockwise" Point="16.1,19.6" IsStroked="True" />
                                                    </PathSegmentCollection>
                                                </PathFigure.Segments>
                                            </PathFigure>
                                            <PathFigure StartPoint="21.63,8.1">
                                                <PathFigure.Segments>
                                                    <PathSegmentCollection>
                                                        <ArcSegment Size="18,18" IsLargeArc="False" SweepDirection="Clockwise" Point="21.63,21.9" IsStroked="True" />
                                                    </PathSegmentCollection>
                                                </PathFigure.Segments>
                                            </PathFigure>
                                            <PathFigure StartPoint="27.17,5.8">
                                                <PathFigure.Segments>
                                                    <PathSegmentCollection>
                                                        <ArcSegment Size="24,24" IsLargeArc="False" SweepDirection="Clockwise" Point="27.17,25.18" IsStroked="True" />
                                                    </PathSegmentCollection>
                                                </PathFigure.Segments>
                                            </PathFigure>
                                        </PathFigureCollection>
                                    </PathGeometry.Figures>
                                </PathGeometry>
                            </GeometryGroup>
                        </Path.Data>
                        <Path.Style>
                            <Style TargetType="{x:Type Path}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=CommsEnabled, Mode=OneWay}" Value="True">
                                        <DataTrigger.Setters>
                                            <Setter Property="Stroke" Value="#FFEEB111"/>
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=CommsEnabled, Mode=OneWay}" Value="False">
                                        <DataTrigger.Setters>
                                            <Setter Property="Stroke" Value="#FF666666"/>
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                    </Path>
                </Viewbox>
                <Button.Style>
                    <Style BasedOn="{StaticResource GlassButtonStyle}" TargetType="{x:Type Button}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=CommsEnabled, Mode=OneWay}" Value="True">
                                <DataTrigger.Setters>
                                    <Setter Property="ToolTip">
                                        <Setter.Value>
                                            <ToolTip Content="Disable Communication"/>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger.Setters>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=CommsEnabled, Mode=OneWay}" Value="False">
                                <DataTrigger.Setters>
                                    <Setter Property="ToolTip">
                                        <Setter.Value>
                                            <ToolTip Content="Enable Communication"/>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger.Setters>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Column="1" HorizontalAlignment="Right" Style="{DynamicResource GlassButtonStyle}" Command="{Binding OpenSettings}">
                <Viewbox>
                    <Image Source="Resources/Gear.png"/>
                </Viewbox>
                <Button.ToolTip>
                    <TextBlock Text="Open Settings..."/>
                </Button.ToolTip>
            </Button>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <views:CameraView DataContext="{Binding FrontCamera}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,0,142,0"/>
            <views:CameraView DataContext="{Binding BucketCamera}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Margin="176,0,0,0"/>
            <!--<views:CameraView DataContext="{Binding RearCamera}" Grid.Row="0" Grid.Column="2"/>-->
            <!--<Grid Grid.Row="1" Grid.Column="1" DataContext="{Binding Telemetry}" HorizontalAlignment="Center">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" VerticalAlignment="Center" Margin="3" Text="{Binding BucketPivotAngle, StringFormat='Pivot Angle: \{0:f1}'}" FontSize="16" Foreground="{StaticResource TextForegroundBrush}"/>
                <TextBlock  Grid.Row="1" VerticalAlignment="Center"  Margin="3" Text="{Binding BucketPitchAngle, StringFormat='Pitch Angle: \{0:f1}'}" FontSize="16" Foreground="{StaticResource TextForegroundBrush}"/>
                <StackPanel Orientation="Horizontal" Grid.Row="2" VerticalAlignment="Center">                    
                    <components:SwitchIndicator DataContext="{Binding BucketUpperLimitSwitch}" Margin="3"/>
                    <TextBlock Text="Bucket Upper Limit Switch" FontSize="16" Foreground="{StaticResource TextForegroundBrush}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Row="3" VerticalAlignment="Center">
                    <components:SwitchIndicator DataContext="{Binding BucketLowerLimitSwitch}" Margin="3"/>
                    <TextBlock Text="Bucket Lower Limit Switch" FontSize="16" Foreground="{StaticResource TextForegroundBrush}"/>
                </StackPanel>
                    <TextBlock Grid.Row="4" VerticalAlignment="Center" Margin="3" Text="{Binding BeltMotorAmps, StringFormat='Belt Motor Amps: \{0:f1}'}" FontSize="16" Foreground="{StaticResource TextForegroundBrush}"/>
            </Grid>-->
            <!--
            <Border Grid.Row="0" Grid.Column="2" BorderBrush="{StaticResource ControlBorderBrush}" BorderThickness="1" CornerRadius="2" Margin="5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="26"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Text="Rear Range Finder" Foreground="{StaticResource TextForegroundBrush}" FontSize="12" Margin="3" VerticalAlignment="Bottom"/>
                    <Viewbox Margin="3" Grid.Row="1">
                        <visual:PointDisplayControl x:Name="rear_rf_Display" Width="400" Height="200" DataContext="{Binding Telemetry}" PointSource="{Binding RearRFPoints}" MaxRange="1000">
                                <visual:PointDisplayControl.LayoutTransform>
                                <RotateTransform Angle="180"/>
                                </visual:PointDisplayControl.LayoutTransform>
                            </visual:PointDisplayControl>
                    </Viewbox>              
                </Grid>
            </Border>
            -->
            <Border Grid.Row="1" Grid.ColumnSpan="3" BorderBrush="{StaticResource ControlBorderBrush}" BorderThickness="1" CornerRadius="2" Margin="6,5,5,5"
                    DataContext="{Binding Telemetry}">

                    <Grid Margin="0,0,0,0">
                        <StackPanel HorizontalAlignment="Left" Orientation="Vertical" Margin="20,-3,0,3">
                        <TextBlock Margin="3" FontSize="14" Foreground="{StaticResource TextForegroundBrush}" Text="{Binding ScoopPivotAngle, StringFormat='Arm Angle: \{0:f0}&#186;'}"/>
                        <TextBlock Margin="3" FontSize="14" Foreground="{StaticResource TextForegroundBrush}" Text="{Binding ScoopPitchAngle, StringFormat='Scoop Angle: \{0:f0}&#186;'}"/>
                        <TextBlock Margin="3" FontSize="14" Foreground="{StaticResource TextForegroundBrush}" Text="{Binding ArmMotorAmps, StringFormat='Arm Motor Amps: \{0:f0}'}"/>
                        <TextBlock Margin="3" FontSize="14" Foreground="{StaticResource TextForegroundBrush}" Text="{Binding BucketPivotAngle, StringFormat='Dump Bucket Angle: \{0:f0}&#186;'}"/>
                        <TextBlock Margin="3" FontSize="14" Foreground="{StaticResource TextForegroundBrush}" Text="{Binding X, StringFormat=X: \{0:f1\}}"/>
                        <TextBlock Margin="3" FontSize="14" Foreground="{StaticResource TextForegroundBrush}" Text="{Binding Y, StringFormat=Y: \{0:f1\}}"/>
                        <TextBlock Margin="3" FontSize="14" Foreground="{StaticResource TextForegroundBrush}" Text="{Binding Theta, StringFormat=Theta: \{0:f1\}}"/>
                        <TextBlock Margin="3" FontSize="14" Foreground="{StaticResource TextForegroundBrush}" Text="{Binding State, StringFormat=State: \{0:f1\}}"/>





                    </StackPanel>
                    <Viewbox HorizontalAlignment="Center" Width="600" Margin="250,0,250,0">
                        <Canvas Height="1250" Width="2000" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Canvas Panel.ZIndex="1" Canvas.Top="607" Canvas.Left="287">
                                <Image Source="Resources/Scoop.png" Panel.ZIndex="2" RenderTransformOrigin="0.876,0.154" Canvas.Top="87" Canvas.Left="-149">
                                <Image.RenderTransform>
                                    <RotateTransform CenterX="0" CenterY="0" Angle="{Binding ScoopPivotAngle}"/>
                                </Image.RenderTransform>
                            </Image>
                                <Image Source="Resources/Bucket.png" Canvas.Left="426" Canvas.Top="-66" RenderTransformOrigin="0.914,0.106">
                                <Image.RenderTransform>
                                    <RotateTransform Angle="{Binding BucketPivotAngle}" CenterX="0" CenterY="0"/>
                                </Image.RenderTransform>
                            </Image>
                        </Canvas>
                        <!--<components:SwitchIndicator DataContext="{Binding ScoopUpperLimitSwitch}" Canvas.Left="782" Canvas.Top="632" Height="50" Width="50"/>
                        <components:SwitchIndicator DataContext="{Binding ScoopLowerLimitSwitch}" Canvas.Left="602" Canvas.Top="1128" Height="50" Width="50"/>-->
                        <Image Source="Resources/base.png" Canvas.Top="564" Canvas.Left="457" Panel.ZIndex="4"/>

                        </Canvas>
                    </Viewbox>
                    <TextBlock Margin="700,0,0,260" Text="Drive Motor Current Draw" Foreground="{StaticResource TextForegroundBrush}" FontSize="14" VerticalAlignment="Top"/>
                    <TextBlock Margin="700,25,0,235" FontSize="14" Foreground="{StaticResource TextForegroundBrush}" Text="{Binding LeftFrontMotorAmps, StringFormat='Left Front: \{0:f1}'}"/>
                    <TextBlock Margin="825,25,0,235" FontSize="14" Foreground="{StaticResource TextForegroundBrush}" Text="{Binding RightFrontMotorAmps, StringFormat='Right Front: \{0:f1}'}"/>
                    <TextBlock Margin="700,50,0,210" FontSize="14" Foreground="{StaticResource TextForegroundBrush}" Text="{Binding LeftRearMotorAmps, StringFormat='Left Rear: \{0:f1}'}"/>
                    <TextBlock Margin="825,50,0,210" FontSize="14" Foreground="{StaticResource TextForegroundBrush}" Text="{Binding RightRearMotorAmps, StringFormat='Right Rear: \{0:f1}'}"/>
                    <TextBlock Margin="806,170,0,95" FontSize="14" Foreground="{StaticResource TextForegroundBrush}" Text="{Binding RearProximityLeft, StringFormat='Left Distance: \{0:f1\}'}"/>
                    <TextBlock Margin="806,215,0,45" FontSize="14" Foreground="{StaticResource TextForegroundBrush}" Text="{Binding RearProximityRight, StringFormat='Right Distance: \{0:f1\}'}"/>
                    <ProgressBar Foreground="#FFEEB111" HorizontalAlignment="Left" Height="25" Orientation="Horizontal" Margin="685,170,0,0" VerticalAlignment="Top" Width="120" Value="{Binding ProximityBar1}" Maximum="80" Minimum="0" />
                    <ProgressBar Foreground="#FFEEB111" HorizontalAlignment="Left" Height="25" Orientation="Horizontal" Margin="685,215,0,0" VerticalAlignment="Top" Width="120" Value="{Binding ProximityBar2}" Maximum="80" Minimum="0"/>
                    <!--<TextBlock Margin="825,232,55,0" Text="Left" Foreground="{StaticResource TextForegroundBrush}" FontSize="12" VerticalAlignment="Top"/>
                    <TextBlock Margin="825,257,52,0" Text="Right" Foreground="{StaticResource TextForegroundBrush}" FontSize="12" VerticalAlignment="Top"/>-->
                    <TextBlock Margin="685,142,0,0" Text="Rear Proximity" Foreground="{StaticResource TextForegroundBrush}" FontSize="14" VerticalAlignment="Top" HorizontalAlignment="Left"/>

                    <!--"<TextBlock Margin="306,22,633,262" FontSize="14" Foreground="{StaticResource TextForegroundBrush}" Text="{Binding BeltMotorAmps, StringFormat=Belt Motor Amps: \{0:f1\}}"/>
                    <TextBlock Margin="306,47,633,237" FontSize="14" Foreground="{StaticResource TextForegroundBrush}" Text="{Binding TiltX, StringFormat=Tilt X: \{0:f1\}}"/>
                    <TextBlock Margin="306,71,633,213" FontSize="14" Foreground="{StaticResource TextForegroundBrush}" Text="{Binding TiltY, StringFormat=Tilt Y: \{0:f1\}}"/>
                    <TextBlock Margin="306,96,633,188" FontSize="14" Foreground="{StaticResource TextForegroundBrush}" Text="{Binding BinLeftMotorAmps, StringFormat=Bin Left Motor Amps: \{0:f1\}}"/>
                    <TextBlock Margin="306,120,633,164" FontSize="14" Foreground="{StaticResource TextForegroundBrush}" Text="{Binding BinRightMotorAmps, StringFormat=Bin Right Motor Amps: \{0:f1\}}"/>
                    <TextBlock Margin="306,145,633,139" FontSize="14" Foreground="{StaticResource TextForegroundBrush}" Text="{Binding RearProximityLeft, StringFormat=Left Rear Proximity Sensor: \{0:f1\}}"/>
                    <TextBlock Margin="306,170,633,114" FontSize="14" Foreground="{StaticResource TextForegroundBrush}" Text="{Binding RearProximityRight, StringFormat=Right Rear Proximity Sensor: \{0:f1\}}"/>-->
                </Grid>

            </Border>
        </Grid>
        <Grid Grid.Row="1" Grid.Column="1" DataContext="{Binding Telemetry}" Margin="3">
            <Expander ExpandDirection="Left" Margin="3" Background="#DDEEB111" Padding="1,2,1,2">
                <Expander.Header>
                    <StackPanel Orientation="Vertical">
                        <components:BatteryView DataContext="{Binding DriveBatteryInfo}">
                            <components:BatteryView.ToolTip>
                                <ToolTip>
                                    <TextBlock Text="{Binding Voltage, StringFormat='Drive Battery: \{0:f1} V'}"/>
                                </ToolTip>
                            </components:BatteryView.ToolTip>
                        </components:BatteryView>
                        <components:BatteryView DataContext="{Binding CleanBatteryInfo}">
                            <components:BatteryView.ToolTip>
                                <ToolTip>
                                    <TextBlock Text="{Binding Voltage, StringFormat='Clean Battery: \{0:f1} V'}"/>
                                </ToolTip>
                            </components:BatteryView.ToolTip>
                        </components:BatteryView>
                    </StackPanel>
                </Expander.Header>
                <Grid Width="200">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <charting:Chart Grid.Row="0" BorderThickness="0" Background="Transparent" Title="Drive Battery Voltage" 
                                    Foreground="{DynamicResource TextForegroundBrush}">
                        <charting:Chart.PlotAreaStyle>
                            <Style TargetType="Grid">
                                <Setter Property="Background" Value="Transparent"/>
                            </Style>
                        </charting:Chart.PlotAreaStyle>
                        <charting:Chart.LegendStyle>
                            <Style TargetType="{x:Type toolkit:Legend}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Setter Property="Height" Value="0"/>
                                <Setter Property="Width" Value="0"/>
                            </Style>
                        </charting:Chart.LegendStyle>
                        <charting:Chart.TitleStyle>
                            <Style TargetType="{x:Type toolkit:Title}">
                                <Setter Property="FontSize" Value="12"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                            </Style>
                        </charting:Chart.TitleStyle>
                        <charting:AreaSeries DependentValuePath="Value" IndependentValuePath="Key" ItemsSource="{Binding DriveBatteryData}">
                            <charting:AreaSeries.DataPointStyle>
                                <Style TargetType="{x:Type charting:AreaDataPoint}">
                                    <Setter Property="Height" Value="0"/>
                                    <Setter Property="Width" Value="0"/>
                                    <Setter Property="Background" Value="#1E90FF"/>
                                </Style>
                            </charting:AreaSeries.DataPointStyle>
                            <charting:AreaSeries.DependentRangeAxis>
                                <charting:LinearAxis Orientation="Y" Title="Voltage" Minimum="34" Maximum="42" FontSize="10" ShowGridLines="True"/>
                            </charting:AreaSeries.DependentRangeAxis>
                            <charting:AreaSeries.IndependentAxis>
                                <charting:LinearAxis Orientation="X" FontSize="10" ShowGridLines="True">
                                    <charting:LinearAxis.AxisLabelStyle>
                                        <Style TargetType="charting:AxisLabel">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="charting:AxisLabel">
                                                        <TextBlock DataContext="{TemplateBinding DataContext}" Text="{Binding Converter={StaticResource ticksConverter}}">
                                                <TextBlock.LayoutTransform>
                                                    <RotateTransform Angle="-60"/>
                                                </TextBlock.LayoutTransform>
                                                        </TextBlock>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </charting:LinearAxis.AxisLabelStyle>
                                </charting:LinearAxis>
                            </charting:AreaSeries.IndependentAxis>
                        </charting:AreaSeries>
                        <charting:Chart.ToolTip>
                            <ToolTip>
                                <TextBlock DataContext="{Binding DriveBatteryInfo}" Text="{Binding Voltage, StringFormat='\{0:f1} V'}"/>
                            </ToolTip>
                        </charting:Chart.ToolTip>
                    </charting:Chart>
                    <charting:Chart Grid.Row="1" BorderThickness="0" Background="Transparent" Title="Clean Battery Voltage" 
                                    Foreground="{DynamicResource TextForegroundBrush}">
                        <charting:Chart.PlotAreaStyle>
                            <Style TargetType="Grid">
                                <Setter Property="Background" Value="Transparent"/>
                            </Style>
                        </charting:Chart.PlotAreaStyle>
                        <charting:Chart.LegendStyle>
                            <Style TargetType="{x:Type toolkit:Legend}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Setter Property="Height" Value="0"/>
                                <Setter Property="Width" Value="0"/>
                            </Style>
                        </charting:Chart.LegendStyle>
                        <charting:Chart.TitleStyle>
                            <Style TargetType="{x:Type toolkit:Title}">
                                <Setter Property="FontSize" Value="12"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                            </Style>
                        </charting:Chart.TitleStyle>
                        <charting:AreaSeries DependentValuePath="Value" IndependentValuePath="Key" ItemsSource="{Binding CleanBatteryData}">
                            <charting:AreaSeries.DataPointStyle>
                                <Style TargetType="{x:Type charting:AreaDataPoint}">
                                    <Setter Property="Height" Value="0"/>
                                    <Setter Property="Width" Value="0"/>
                                    <Setter Property="Background" Value="#1E90FF"/>
                                </Style>
                            </charting:AreaSeries.DataPointStyle>
                            <charting:AreaSeries.DependentRangeAxis>
                                <charting:LinearAxis Orientation="Y" Title="Voltage" Minimum="14" Maximum="21" FontSize="10" ShowGridLines="True"/>
                            </charting:AreaSeries.DependentRangeAxis>
                            <charting:AreaSeries.IndependentAxis>
                                <charting:LinearAxis Orientation="X" FontSize="10" ShowGridLines="True">
                                    <charting:LinearAxis.AxisLabelStyle>
                                        <Style TargetType="charting:AxisLabel">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="charting:AxisLabel">
                                                        <TextBlock DataContext="{TemplateBinding DataContext}" Text="{Binding Converter={StaticResource ticksConverter}}">
                                                <TextBlock.LayoutTransform>
                                                    <RotateTransform Angle="-60"/>
                                                </TextBlock.LayoutTransform>
                                                        </TextBlock>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </charting:LinearAxis.AxisLabelStyle>
                                </charting:LinearAxis>
                            </charting:AreaSeries.IndependentAxis>
                        </charting:AreaSeries>
                        <charting:Chart.ToolTip>
                            <ToolTip>
                                <TextBlock DataContext="{Binding CleanBatteryInfo}" Text="{Binding Voltage, StringFormat='\{0:f1} V'}"/>
                            </ToolTip>
                        </charting:Chart.ToolTip>
                    </charting:Chart>
                    <charting:Chart Grid.Row="2" BorderThickness="0" Background="Transparent" Title="Power Used" 
                                    Foreground="{DynamicResource TextForegroundBrush}">
                        <charting:Chart.PlotAreaStyle>
                            <Style TargetType="Grid">
                                <Setter Property="Background" Value="Transparent"/>
                            </Style>
                        </charting:Chart.PlotAreaStyle>
                        <charting:Chart.LegendStyle>
                            <Style TargetType="{x:Type toolkit:Legend}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Setter Property="Height" Value="0"/>
                                <Setter Property="Width" Value="0"/>
                            </Style>
                        </charting:Chart.LegendStyle>
                        <charting:Chart.TitleStyle>
                            <Style TargetType="{x:Type toolkit:Title}">
                                <Setter Property="FontSize" Value="12"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                            </Style>
                        </charting:Chart.TitleStyle>
                        <charting:AreaSeries DependentValuePath="Value" IndependentValuePath="Key" ItemsSource="{Binding PowerUsedData}">
                            <charting:AreaSeries.DataPointStyle>
                                <Style TargetType="{x:Type charting:AreaDataPoint}">
                                    <Setter Property="Height" Value="0"/>
                                    <Setter Property="Width" Value="0"/>
                                    <Setter Property="Background" Value="#1E90FF"/>
                                </Style>
                            </charting:AreaSeries.DataPointStyle>
                            <charting:AreaSeries.DependentRangeAxis>
                                <charting:LinearAxis Orientation="Y" Title="Watt Hours" Minimum="0" FontSize="10" ShowGridLines="True"/>
                            </charting:AreaSeries.DependentRangeAxis>
                            <charting:AreaSeries.IndependentAxis>
                                <charting:LinearAxis Orientation="X" FontSize="10" ShowGridLines="True">
                                    <charting:LinearAxis.AxisLabelStyle>
                                        <Style TargetType="charting:AxisLabel">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="charting:AxisLabel">
                                                        <TextBlock DataContext="{TemplateBinding DataContext}" Text="{Binding Converter={StaticResource ticksConverter}}">
                                                <TextBlock.LayoutTransform>
                                                    <RotateTransform Angle="-60"/>
                                                </TextBlock.LayoutTransform>
                                                        </TextBlock>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </charting:LinearAxis.AxisLabelStyle>
                                </charting:LinearAxis>
                            </charting:AreaSeries.IndependentAxis>
                        </charting:AreaSeries>
                        <charting:Chart.ToolTip>
                            <ToolTip>
                                <TextBlock Text="{Binding PowerUsedRecent, StringFormat='\{0:f1} Wh'}"/>
                            </ToolTip>
                        </charting:Chart.ToolTip>
                    </charting:Chart>
                </Grid>
            </Expander>
        </Grid>
    </Grid>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding Shutdown}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
</Window>
