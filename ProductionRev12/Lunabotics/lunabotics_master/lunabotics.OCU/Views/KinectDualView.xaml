<UserControl x:Class="lunabotics.OCU.Views.KinectDualView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:converters="clr-namespace:lunabotics.OCU.Converters"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:sys="clr-namespace:System;assembly=System"
             mc:Ignorable="d">
    <UserControl.Resources>
        <converters:IsNullConverter x:Key="isNullConverter"/>
        <converters:VisibilityConverter x:Key="visibilityConverter"/>
        <!--<Style TargetType="{x:Type Expander}">
            <Style.Triggers>
                <Trigger Property="IsExpanded" Value="False">
                    <Setter Property="LayoutTransform">
                        <Setter.Value>
                            <RotateTransform Angle="90"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>-->
        <Style TargetType="{x:Type Expander}" x:Key="expander_mouse_over_style">
            <Setter Property="Opacity" Value="0.25"/>
            <Style.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <BooleanAnimationUsingKeyFrames
                                    Storyboard.TargetProperty="IsExpanded"
                                Duration="0">
                                    <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:0"/>
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <BooleanAnimationUsingKeyFrames
                                    Storyboard.TargetProperty="IsExpanded"
                                Duration="0">
                                    <DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:0"/>
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetProperty="Opacity"
                                    Duration="0:0:0.1"
                                    To="0.25"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Border BorderBrush="{DynamicResource ControlBorderBrush}" BorderThickness="1" CornerRadius="2" Margin="5">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Row="0" Grid.ColumnSpan="2">
                <Button Command="{Binding ToggleKinect}" Height="24">
                    <Viewbox>
                        <Path x:Name="path" StrokeThickness="4" Height="30" Width="35">
                            <Path.Data>
                                <GeometryGroup>
                                    <EllipseGeometry Center="5,15" RadiusX="1" RadiusY="1"/>
                                    <PathGeometry>
                                        <PathGeometry.Figures>
                                            <PathFigureCollection>
                                                <PathFigure StartPoint="10.54,12.7">
                                                    <PathFigure.Segments>
                                                        <PathSegmentCollection>
                                                            <ArcSegment Size="6,6" IsLargeArc="False" SweepDirection="Clockwise" Point="10.54,17.3" IsStroked="True" />
                                                        </PathSegmentCollection>
                                                    </PathFigure.Segments>
                                                </PathFigure>
                                                <PathFigure StartPoint="16.1,10.4">
                                                    <PathFigure.Segments>
                                                        <PathSegmentCollection>
                                                            <ArcSegment Size="12,12" IsLargeArc="False" SweepDirection="Clockwise" Point="16.1,19.6" IsStroked="True" />
                                                        </PathSegmentCollection>
                                                    </PathFigure.Segments>
                                                </PathFigure>
                                                <PathFigure StartPoint="21.63,8.1">
                                                    <PathFigure.Segments>
                                                        <PathSegmentCollection>
                                                            <ArcSegment Size="18,18" IsLargeArc="False" SweepDirection="Clockwise" Point="21.63,21.9" IsStroked="True" />
                                                        </PathSegmentCollection>
                                                    </PathFigure.Segments>
                                                </PathFigure>
                                                <PathFigure StartPoint="27.17,5.8">
                                                    <PathFigure.Segments>
                                                        <PathSegmentCollection>
                                                            <ArcSegment Size="24,24" IsLargeArc="False" SweepDirection="Clockwise" Point="27.17,25.18" IsStroked="True" />
                                                        </PathSegmentCollection>
                                                    </PathFigure.Segments>
                                                </PathFigure>
                                            </PathFigureCollection>
                                        </PathGeometry.Figures>
                                    </PathGeometry>
                                </GeometryGroup>
                            </Path.Data>
                            <Path.Style>
                                <Style TargetType="{x:Type Path}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsActive, Mode=OneWay}" Value="True">
                                            <DataTrigger.Setters>
                                                <Setter Property="Stroke" Value="Green"/>
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsActive, Mode=OneWay}" Value="False">
                                            <DataTrigger.Setters>
                                                <Setter Property="Stroke" Value="#FF666666"/>
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>
                    </Viewbox>
                    <Button.Style>
                        <Style BasedOn="{StaticResource GlassButtonStyle}" TargetType="{x:Type Button}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsActive, Mode=OneWay}" Value="True">
                                    <DataTrigger.Setters>
                                        <Setter Property="ToolTip">
                                            <Setter.Value>
                                                <ToolTip Content="Disable Camera View"/>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger.Setters>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsActive, Mode=OneWay}" Value="False">
                                    <DataTrigger.Setters>
                                        <Setter Property="ToolTip">
                                            <Setter.Value>
                                                <ToolTip Content="Enable Camera View"/>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger.Setters>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <TextBlock  Margin="3" Text="{Binding Name}" Foreground="{StaticResource TextForegroundBrush}" FontSize="14" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
            </StackPanel>
            <StackPanel Orientation="Vertical" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center">
                <TextBlock Text="Color Camera" Foreground="{StaticResource TextForegroundBrush}" Margin="3" HorizontalAlignment="Center"/>
                <Border  Margin="6" BorderBrush="{StaticResource ImageBorderBrush}" HorizontalAlignment="Center" VerticalAlignment="Center"
                CornerRadius="2" BorderThickness="1">
                    <Viewbox>
                        <Grid>
                            <Image Source="{Binding ColorFeed}" x:Name="color_image" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <TextBlock Text="No Feed" Foreground="White" Margin="10" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style>
                                    <Style.Triggers>
                                            <DataTrigger Binding="{Binding ColorFeed, Converter={StaticResource isNullConverter}}" Value="False">
                                                <Setter Property="TextBlock.Opacity" Value="0"/>
                                            </DataTrigger>
                                    </Style.Triggers>
                                </Style>                                    
                            </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Viewbox>
                </Border>
            </StackPanel>
            <Expander Grid.Row="1" Grid.Column="0" Header="Color Settings" Foreground="{StaticResource TextForegroundBrush}" Panel.ZIndex="99"
                      ExpandDirection="Up" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="3" Width="125" Background="#D0303030"
                          Style="{StaticResource expander_mouse_over_style}">
                <Border Padding="3" BorderBrush="{StaticResource ControlBorderBrush}" BorderThickness="1" CornerRadius="2">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Column="0" Grid.Row="0" Text="Quality:" Foreground="{StaticResource TextForegroundBrush}" HorizontalAlignment="Center"/>
                        <Slider Grid.Column="0" Grid.Row="1" Orientation="Vertical" Minimum="1" Maximum="20"  AutoToolTipPlacement="TopLeft" Value="{Binding ColorQuality}" Height="100" HorizontalAlignment="Center" Margin="3"/>
                        <TextBlock Grid.Column="1" Grid.Row="0" Text="Framerate:" Foreground="{StaticResource TextForegroundBrush}"/>
                        <Slider Grid.Column="1" Grid.Row="1" Orientation="Vertical" Minimum="0" Maximum="30" AutoToolTipPlacement="TopLeft" Value="{Binding ColorFrameRate}" Height="100" HorizontalAlignment="Center" Margin="3"/>
                        <CheckBox Grid.Row="2" Grid.ColumnSpan="2" Content="Enabled" HorizontalAlignment="Center"  IsChecked="{Binding ColorEnabled, Mode=TwoWay}" Foreground="{StaticResource TextForegroundBrush}"/>
                    </Grid>
                </Border>
            </Expander>
            <StackPanel Orientation="Vertical" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center">
                <TextBlock Text="Depth Sensor" Foreground="{StaticResource TextForegroundBrush}" Margin="3" HorizontalAlignment="Center"/>
                <Border Margin="6" BorderBrush="{StaticResource ImageBorderBrush}" HorizontalAlignment="Center" VerticalAlignment="Center"
                        CornerRadius="2" BorderThickness="1">
                    <Viewbox>
                        <Grid>
                            <Image Source="{Binding DepthFeed}" x:Name="depth_image" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <TextBlock Text="No Feed" Foreground="White" Margin="10" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock.Style>
                                    <Style>
                                        <Style.Triggers>
                                                <DataTrigger Binding="{Binding DepthFeed, Converter={StaticResource isNullConverter}}" Value="False">
                                                    <Setter Property="TextBlock.Opacity" Value="0"/>
                                                </DataTrigger>
                                        </Style.Triggers>
                                    </Style>                                    
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Viewbox>
                </Border>
            </StackPanel>
            <Expander Grid.Row="1" Grid.Column="1" Grid.RowSpan="2" Header="Depth Settings" Foreground="{StaticResource TextForegroundBrush}" Panel.ZIndex="99"
                      ExpandDirection="Up" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="3" Width="125" Background="#D0303030"
                      Style="{StaticResource expander_mouse_over_style}">
                <Border Padding="3" BorderBrush="{StaticResource ControlBorderBrush}" BorderThickness="1" CornerRadius="2">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Column="0" Grid.Row="0" Text="Quality:" Foreground="{StaticResource TextForegroundBrush}" HorizontalAlignment="Center"/>
                        <Slider Grid.Column="0" Grid.Row="1" Orientation="Vertical" Minimum="1" Maximum="20"  AutoToolTipPlacement="TopLeft" Value="{Binding DepthQuality}" Height="100" HorizontalAlignment="Center" Margin="3"/>
                        <TextBlock Grid.Column="1" Grid.Row="0" Text="Framerate:" Foreground="{StaticResource TextForegroundBrush}"/>
                        <Slider Grid.Column="1" Grid.Row="1" Orientation="Vertical" Minimum="0" Maximum="30" AutoToolTipPlacement="TopLeft" Value="{Binding DepthFrameRate}" Height="100" HorizontalAlignment="Center" Margin="3"/>
                        <CheckBox Grid.Row="2" Grid.ColumnSpan="2" Content="Enabled" HorizontalAlignment="Center"  IsChecked="{Binding DepthEnabled, Mode=TwoWay}" Foreground="{StaticResource TextForegroundBrush}"/>
                    </Grid>
                </Border>
            </Expander>
        </Grid>
    </Border>
</UserControl>
